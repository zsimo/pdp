(()=>{"use strict";var t={533:(t,s,e)=>{const i=e(494),h=e(997),r=e(158);t.exports=class{constructor(t,s,e,r,n,o=3){this.x=t,this.y=s,this.width=e,this.height=r,this.speed=0,this.acceleration=.2,this.maxSpeed=o,this.friction=.05,this.angle=0,this.damaged=!1,"DUMMY"!==n&&(this.sensor=new h(this)),this.controls=new i(n)}update(t,s){this.damaged||(this.move(),this.polygon=this.createPolygon(),this.damaged=this.assessDamage(t,s)),this.sensor&&this.sensor.update(t,s)}move(){if(this.controls.forward&&(this.speed+=this.acceleration),this.controls.reverse&&(this.speed-=this.acceleration),this.speed>this.maxSpeed&&(this.speed=this.maxSpeed),this.speed<-this.maxSpeed/2&&(this.speed=-this.maxSpeed/2),this.speed>0&&(this.speed-=this.friction),this.speed<0&&(this.speed+=this.friction),Math.abs(this.speed)<this.friction&&(this.speed=0),0!=this.speed){const t=this.speed>0?1:-1;this.controls.left&&(this.angle+=.03*t),this.controls.right&&(this.angle-=.03*t)}this.x-=Math.sin(this.angle)*this.speed,this.y-=Math.cos(this.angle)*this.speed}assessDamage(t,s){for(let s=0;s<t.length;s++)if(r.polysIntersect(this.polygon,t[s]))return!0;for(let t=0;t<s.length;t++)if(r.polysIntersect(this.polygon,s[t].polygon))return!0;return!1}createPolygon(){const t=[],s=Math.hypot(this.width,this.height)/2,e=Math.atan2(this.width,this.height);return t.push({x:this.x-Math.sin(this.angle-e)*s,y:this.y-Math.cos(this.angle-e)*s}),t.push({x:this.x-Math.sin(this.angle+e)*s,y:this.y-Math.cos(this.angle+e)*s}),t.push({x:this.x-Math.sin(Math.PI+this.angle-e)*s,y:this.y-Math.cos(Math.PI+this.angle-e)*s}),t.push({x:this.x-Math.sin(Math.PI+this.angle+e)*s,y:this.y-Math.cos(Math.PI+this.angle+e)*s}),t}draw(t,s){this.damaged?t.fillStyle="gray":t.fillStyle=s,t.beginPath(),t.moveTo(this.polygon[0].x,this.polygon[0].y);for(let s=1;s<this.polygon.length;s++)t.lineTo(this.polygon[s].x,this.polygon[s].y);t.fill(),this.sensor&&this.sensor.draw(t)}}},494:t=>{t.exports=class{constructor(t){this.forward=!1,this.left=!1,this.right=!1,this.reverse=!1,"KEYS"===t?this.addKeyboardListeners():"DUMMY"===t&&(this.forward=!0)}addKeyboardListeners(){document.onkeydown=t=>{switch(t.key){case"ArrowLeft":this.left=!0;break;case"ArrowRight":this.right=!0;break;case"ArrowUp":this.forward=!0;break;case"ArrowDown":this.reverse=!0}},document.onkeyup=t=>{switch(t.key){case"ArrowLeft":this.left=!1;break;case"ArrowRight":this.right=!1;break;case"ArrowUp":this.forward=!1;break;case"ArrowDown":this.reverse=!1}}}}},621:(t,s,e)=>{const i=e(158);t.exports=class{constructor(t,s,e=3){this.x=t,this.width=s,this.laneCount=e,this.left=t-s/2,this.right=t+s/2;this.top=-1e6,this.bottom=1e6;const i={x:this.left,y:this.top},h={x:this.right,y:this.top},r={x:this.left,y:this.bottom},n={x:this.right,y:this.bottom};this.borders=[[i,r],[h,n]]}getLaneCenter(t){const s=this.width/this.laneCount;return this.left+s/2+Math.min(t,this.laneCount-1)*s}draw(t){t.lineWidth=5,t.strokeStyle="white";for(let s=1;s<=this.laneCount-1;s++){const e=i.lerp(this.left,this.right,s/this.laneCount);t.setLineDash([20,20]),t.beginPath(),t.moveTo(e,this.top),t.lineTo(e,this.bottom),t.stroke()}t.setLineDash([]),this.borders.forEach((s=>{t.beginPath(),t.moveTo(s[0].x,s[0].y),t.lineTo(s[1].x,s[1].y),t.stroke()}))}}},997:(t,s,e)=>{const i=e(158);t.exports=class{constructor(t){this.car=t,this.rayCount=5,this.rayLength=150,this.raySpread=Math.PI/2,this.rays=[],this.readings=[]}update(t,s){this.castRays(),this.readings=[];for(let e=0;e<this.rays.length;e++)this.readings.push(this.getReading(this.rays[e],t,s))}getReading(t,s,e){let h=[];for(let e=0;e<s.length;e++){const r=i.getIntersection(t[0],t[1],s[e][0],s[e][1]);r&&h.push(r)}for(let s=0;s<e.length;s++){const r=e[s].polygon;for(let s=0;s<r.length;s++){const e=i.getIntersection(t[0],t[1],r[s],r[(s+1)%r.length]);e&&h.push(e)}}if(0==h.length)return null;{const t=h.map((t=>t.offset)),s=Math.min(...t);return h.find((t=>t.offset==s))}}castRays(){this.rays=[];for(let t=0;t<this.rayCount;t++){const s=i.lerp(this.raySpread/2,-this.raySpread/2,1==this.rayCount?.5:t/(this.rayCount-1))+this.car.angle,e={x:this.car.x,y:this.car.y},h={x:this.car.x-Math.sin(s)*this.rayLength,y:this.car.y-Math.cos(s)*this.rayLength};this.rays.push([e,h])}}draw(t){for(let s=0;s<this.rayCount;s++){let e=this.rays[s][1];this.readings[s]&&(e=this.readings[s]),t.beginPath(),t.lineWidth=2,t.strokeStyle="yellow",t.moveTo(this.rays[s][0].x,this.rays[s][0].y),t.lineTo(e.x,e.y),t.stroke(),t.beginPath(),t.lineWidth=2,t.strokeStyle="black",t.moveTo(this.rays[s][1].x,this.rays[s][1].y),t.lineTo(e.x,e.y),t.stroke()}}}},158:t=>{const s={lerp:function(t,s,e){return t+(s-t)*e},getIntersection:function(t,e,i,h){const r=(h.x-i.x)*(t.y-i.y)-(h.y-i.y)*(t.x-i.x),n=(i.y-t.y)*(t.x-e.x)-(i.x-t.x)*(t.y-e.y),o=(h.y-i.y)*(e.x-t.x)-(h.x-i.x)*(e.y-t.y);if(0!=o){const i=r/o,h=n/o;if(i>=0&&i<=1&&h>=0&&h<=1)return{x:s.lerp(t.x,e.x,i),y:s.lerp(t.y,e.y,i),offset:i}}return null},polysIntersect:function(t,e){for(let i=0;i<t.length;i++)for(let h=0;h<e.length;h++)if(s.getIntersection(t[i],t[(i+1)%t.length],e[h],e[(h+1)%e.length]))return!0;return!1}};t.exports=s}},s={};function e(i){if(s[i])return s[i].exports;var h=s[i]={exports:{}};return t[i](h,h.exports,e),h.exports}(()=>{const t=e(533),s=e(621);document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector("canvas"),i=e.getContext("2d"),h=new s(e.width/2,.9*e.width),r=new t(h.getLaneCenter(1),100,30,50,"KEYS"),n=[new t(h.getLaneCenter(1),-100,30,50,"DUMMY",2)];!function t(){for(let t=0;t<n.length;t++)n[t].update(h.borders,[]);r.update(h.borders,n),e.height=window.innerHeight,i.save(),i.translate(0,-r.y+.75*e.height),h.draw(i);for(let t=0;t<n.length;t++)n[t].draw(i,"#7bb24d");r.draw(i,"#de6717"),i.restore(),requestAnimationFrame(t)}()}))})()})();
//# sourceMappingURL=car_0e176620bc021c55500e.js.map