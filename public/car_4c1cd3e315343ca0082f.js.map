{"version":3,"sources":["webpack:///./src/pages/car/car.js","webpack:///./src/pages/car/controls.js","webpack:///./src/pages/car/road.js","webpack:///./src/pages/car/sensor.js","webpack:///./src/pages/car/utils.js","webpack:///webpack/bootstrap","webpack:///./src/pages/car/index.js"],"names":["Controls","Sensor","utils","module","exports","x","y","width","height","this","speed","acceleration","maxSpeed","friction","angle","damaged","sensor","controls","roadBorders","move","polygon","createPolygon","assessDamage","update","forward","reverse","Math","abs","flip","left","right","sin","cos","i","length","polysIntersect","points","rad","hypot","alpha","atan2","push","PI","ctx","fillStyle","beginPath","moveTo","lineTo","fill","draw","addKeyboardListeners","document","onkeydown","event","key","onkeyup","laneCount","top","bottom","topLeft","topRight","bottomLeft","bottomRight","borders","laneIndex","laneWidth","min","lineWidth","strokeStyle","lerp","setLineDash","stroke","forEach","border","car","rayCount","rayLength","raySpread","rays","readings","castRays","getReading","ray","touches","touch","getIntersection","offsets","map","e","offset","minOffset","find","rayAngle","start","end","A","B","t","C","D","tTop","uTop","u","poly1","poly2","j","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","Car","Road","addEventListener","canvas","querySelector","getContext","road","getLaneCenter","animate","window","innerHeight","save","translate","restore","requestAnimationFrame"],"mappings":"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","file":"car_4c1cd3e315343ca0082f.js","sourcesContent":["\"use strict\";\n\nconst Controls = require(\"src/pages/car/controls.js\");\nconst Sensor = require(\"src/pages/car/sensor.js\");\nconst utils = require(\"src/pages/car/utils.js\");\n\nclass Car{\n    constructor(x,y,width,height){\n        this.x=x;\n        this.y=y;\n        this.width=width;\n        this.height=height;\n\n        this.speed=0;\n        this.acceleration=0.2;\n        this.maxSpeed=3;\n        this.friction=0.05;\n        this.angle=0;\n        this.damaged = false;\n\n        this.sensor =  new Sensor(this);\n        this.controls = new Controls();\n    }\n\n    update(roadBorders){\n        // if(!this.damaged){\n            this.move();\n            this.polygon=this.createPolygon();\n            this.damaged=this.assessDamage(roadBorders);\n        // }\n        this.sensor.update(roadBorders);\n    }\n\n    move(){\n        if(this.controls.forward){\n            this.speed+=this.acceleration;\n        }\n        if(this.controls.reverse){\n            this.speed-=this.acceleration;\n        }\n\n        if(this.speed>this.maxSpeed){\n            this.speed=this.maxSpeed;\n        }\n        if(this.speed<-this.maxSpeed/2){\n            this.speed=-this.maxSpeed/2;\n        }\n\n        if(this.speed>0){\n            this.speed-=this.friction;\n        }\n        if(this.speed<0){\n            this.speed+=this.friction;\n        }\n        if(Math.abs(this.speed)<this.friction){\n            this.speed=0;\n        }\n\n        if(this.speed!=0){\n            const flip=this.speed>0?1:-1;\n            if(this.controls.left){\n                this.angle+=0.03*flip;\n            }\n            if(this.controls.right){\n                this.angle-=0.03*flip;\n            }\n        }\n\n        this.x-=Math.sin(this.angle)*this.speed;\n        this.y-=Math.cos(this.angle)*this.speed;\n    }\n\n    assessDamage(roadBorders){\n        for(let i=0;i<roadBorders.length;i++){\n            if(utils.polysIntersect(this.polygon,roadBorders[i])){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    createPolygon(){\n        const points=[];\n        const rad=Math.hypot(this.width,this.height)/2;\n        const alpha=Math.atan2(this.width,this.height);\n        points.push({\n            x:this.x-Math.sin(this.angle-alpha)*rad,\n            y:this.y-Math.cos(this.angle-alpha)*rad\n        });\n        points.push({\n            x:this.x-Math.sin(this.angle+alpha)*rad,\n            y:this.y-Math.cos(this.angle+alpha)*rad\n        });\n        points.push({\n            x:this.x-Math.sin(Math.PI+this.angle-alpha)*rad,\n            y:this.y-Math.cos(Math.PI+this.angle-alpha)*rad\n        });\n        points.push({\n            x:this.x-Math.sin(Math.PI+this.angle+alpha)*rad,\n            y:this.y-Math.cos(Math.PI+this.angle+alpha)*rad\n        });\n        return points;\n    }\n\n    draw(ctx){\n        if(this.damaged){\n            ctx.fillStyle=\"gray\";\n        }else{\n            ctx.fillStyle=\"#de6717\";\n        }\n        ctx.beginPath();\n        ctx.moveTo(this.polygon[0].x,this.polygon[0].y);\n        for(let i=1;i<this.polygon.length;i++){\n            ctx.lineTo(this.polygon[i].x,this.polygon[i].y);\n        }\n        ctx.fill();\n\n        this.sensor.draw(ctx);\n    }\n}\n\nmodule.exports = Car;","\"use strict\";\n\nclass Controls{\n    constructor(){\n        this.forward=false;\n        this.left=false;\n        this.right=false;\n        this.reverse=false;\n\n        this.addKeyboardListeners();\n    }\n\n\n    addKeyboardListeners(){\n        document.onkeydown=(event)=>{\n\n            switch(event.key){\n                case \"ArrowLeft\":\n                    this.left=true;\n                    break;\n                case \"ArrowRight\":\n                    this.right=true;\n                    break;\n                case \"ArrowUp\":\n                    this.forward=true;\n                    break;\n                case \"ArrowDown\":\n                    this.reverse=true;\n                    break;\n            }\n\n        }\n        document.onkeyup=(event)=>{\n            switch(event.key){\n                case \"ArrowLeft\":\n                    this.left=false;\n                    break;\n                case \"ArrowRight\":\n                    this.right=false;\n                    break;\n                case \"ArrowUp\":\n                    this.forward=false;\n                    break;\n                case \"ArrowDown\":\n                    this.reverse=false;\n                    break;\n            }\n        }\n\n\n    }\n}\n\nmodule.exports = Controls;","\"use strict\";\n\nconst utils = require(\"src/pages/car/utils.js\");\n\nclass Road{\n    constructor(x,width,laneCount = 3){\n        this.x=x;\n        this.width=width;\n        this.laneCount=laneCount;\n\n        this.left=x-width/2;\n        this.right=x+width/2;\n\n        const infinity=1000000;\n        this.top=-infinity;\n        this.bottom=infinity;\n\n        const topLeft={x:this.left,y:this.top};\n        const topRight={x:this.right,y:this.top};\n        const bottomLeft={x:this.left,y:this.bottom};\n        const bottomRight={x:this.right,y:this.bottom};\n        this.borders=[\n            [topLeft,bottomLeft],\n            [topRight,bottomRight]\n        ];\n    }\n\n    getLaneCenter(laneIndex){\n        const laneWidth=this.width/this.laneCount;\n        return this.left+laneWidth/2+\n            Math.min(laneIndex,this.laneCount-1)*laneWidth;\n    }\n\n    draw(ctx){\n        ctx.lineWidth=5;\n        ctx.strokeStyle=\"white\";\n\n        for(let i=1;i<=this.laneCount-1;i++){\n            const x= utils.lerp(\n                this.left,\n                this.right,\n                i/this.laneCount\n            );\n\n            ctx.setLineDash([20,20]);\n            ctx.beginPath();\n            ctx.moveTo(x,this.top);\n            ctx.lineTo(x,this.bottom);\n            ctx.stroke();\n        }\n\n        ctx.setLineDash([]);\n        this.borders.forEach(border=>{\n            ctx.beginPath();\n            ctx.moveTo(border[0].x,border[0].y);\n            ctx.lineTo(border[1].x,border[1].y);\n            ctx.stroke();\n        });\n    }\n}\n\nmodule.exports = Road;","\"use strict\";\n\nconst utils = require(\"src/pages/car/utils.js\");\n\nclass Sensor {\n    constructor(car){\n        this.car=car;\n        this.rayCount= 5;\n        this.rayLength=150;\n        this.raySpread=Math.PI/2;\n\n        this.rays=[];\n        this.readings=[];\n    }\n\n    update(roadBorders){\n        this.castRays();\n        this.readings=[];\n        for(let i=0;i<this.rays.length;i++){\n            this.readings.push(\n                this.getReading(this.rays[i], roadBorders)\n            );\n        }\n    }\n\n    getReading(ray, roadBorders){\n        let touches=[];\n\n        for(let i=0;i< roadBorders.length;i++){\n            const touch= utils.getIntersection(\n                ray[0],\n                ray[1],\n                roadBorders[i][0],\n                roadBorders[i][1]\n            );\n            if(touch){\n                touches.push(touch);\n            }\n        }\n\n        if(touches.length==0){\n            return null;\n        }else{\n            const offsets=touches.map(e=>e.offset);\n            const minOffset=Math.min(...offsets);\n            return touches.find(e=>e.offset==minOffset);\n        }\n    }\n\n    castRays(){\n        this.rays=[];\n        for(let i=0;i<this.rayCount;i++){\n            const rayAngle= utils.lerp(\n                this.raySpread/2,\n                -this.raySpread/2,\n                this.rayCount==1?0.5:i/(this.rayCount-1)\n            )+this.car.angle;\n\n            const start={x:this.car.x, y:this.car.y};\n            const end={\n                x:this.car.x-\n                    Math.sin(rayAngle)*this.rayLength,\n                y:this.car.y-\n                    Math.cos(rayAngle)*this.rayLength\n            };\n            this.rays.push([start,end]);\n        }\n    }\n\n    draw(ctx){\n        for(let i=0;i<this.rayCount;i++){\n            let end=this.rays[i][1];\n            if(this.readings[i]){\n                end=this.readings[i];\n            }\n\n            ctx.beginPath();\n            ctx.lineWidth=2;\n            ctx.strokeStyle=\"yellow\";\n            ctx.moveTo(\n                this.rays[i][0].x,\n                this.rays[i][0].y\n            );\n            ctx.lineTo(\n                end.x,\n                end.y\n            );\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.lineWidth=2;\n            ctx.strokeStyle=\"black\";\n            ctx.moveTo(\n                this.rays[i][1].x,\n                this.rays[i][1].y\n            );\n            ctx.lineTo(\n                end.x,\n                end.y\n            );\n            ctx.stroke();\n        }\n    }\n\n}\n\nmodule.exports = Sensor;","\"use strict\";\n\nconst utils = {\n    lerp: function (A,B,t){\n        return A+(B-A)*t;\n    },\n    getIntersection: function(A,B,C,D){\n        const tTop=(D.x-C.x)*(A.y-C.y)-(D.y-C.y)*(A.x-C.x);\n        const uTop=(C.y-A.y)*(A.x-B.x)-(C.x-A.x)*(A.y-B.y);\n        const bottom=(D.y-C.y)*(B.x-A.x)-(D.x-C.x)*(B.y-A.y);\n\n        if(bottom!=0){\n            const t=tTop/bottom;\n            const u=uTop/bottom;\n            if(t>=0 && t<=1 && u>=0 && u<=1){\n                return {\n                    x: utils.lerp(A.x,B.x,t),\n                    y: utils.lerp(A.y,B.y,t),\n                    offset:t\n                }\n            }\n        }\n\n        return null;\n    },\n    polysIntersect: function(poly1, poly2){\n        for(let i=0;i<poly1.length;i++){\n            for(let j=0;j<poly2.length;j++){\n                const touch=utils.getIntersection(\n                    poly1[i],\n                    poly1[(i+1)%poly1.length],\n                    poly2[j],\n                    poly2[(j+1)%poly2.length]\n                );\n                if(touch){\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n};\n\nmodule.exports = utils;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\n\nconst Car = require(\"src/pages/car/car.js\");\nconst Road = require(\"src/pages/car/road.js\");\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const canvas = document.querySelector(\"canvas\");\n\n\n    const ctx = canvas.getContext(\"2d\");\n    const road = new Road(canvas.width / 2, canvas.width * 0.9);\n    const car = new Car(road.getLaneCenter(1),0,30,50);\n\n    animate();\n\n    function animate () {\n        car.update(road.borders);\n\n        canvas.height = window.innerHeight;\n\n        ctx.save();\n        ctx.translate(0, -car.y + canvas.height * 0.75)\n\n        road.draw(ctx);\n        car.draw(ctx);\n\n        ctx.restore();\n\n        requestAnimationFrame(animate);\n    }\n});"],"sourceRoot":""}